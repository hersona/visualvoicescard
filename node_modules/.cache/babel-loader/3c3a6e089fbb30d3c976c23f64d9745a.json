{"ast":null,"code":"import { createAction } from \"@reduxjs/toolkit\";\nexport const startFetchMovieRatings = createAction('START_FETCH_MOVIE_RATINGS');\nexport const successFetchMovieRatings = createAction('SUCCESS_FETCH_MOVIE_RATINGS');\nexport const errorFetchMovieRatings = createAction('ERROR_FETCH_MOVIE_RATINGS');\nexport const fetchMovieRatings = () => async dispatch => {\n  try {\n    console.log(10);\n  } catch (error) {// dispatch(errorFetchMovieRatings({ error }));\n    //dispatch(errorFetchMovieRatingsSlice({ error }));\n  }\n};\n/*\n// Importar actions de slices, solo para cuestiones demostrativas\nimport {\n startFetchMovieRatings as startFetchMovieRatingsSlice,\n successFetchMovieRatings as successFetchMovieRatingsSlice,\n errorFetchMovieRatings as errorFetchMovieRatingsSlice,\n startFetchMovieDetail as startFetchMovieDetailSlice,\n successFetchMovieDetail as successFetchMovieDetailSlice,\n errorFetchMovieDetail as errorFetchMovieDetailSlice,\n} from \"../slices/movies\";\n\n\nexport const fetchMovieRatings = (movieId) => async (dispatch) => {\n try {\n  // dispatch(startFetchMovieRatings());\n  dispatch(startFetchMovieRatingsSlice());\n\n  const response = await fetch(`${BASE_URL}/get-ratings?tconst=${movieId}`, { headers });\n  const data = await response.json();\n  \n  dispatch(successFetchMovieRatingsSlice({ data }));\n  // dispatch(successFetchMovieRatings({ data }));\n } catch (error) {\n  // dispatch(errorFetchMovieRatings({ error }));\n  dispatch(errorFetchMovieRatingsSlice({ error }));\n }\n};\n\nexport const startFetchMovieDetail = createAction('START_FETCH_MOVIE_DETAIL');\nexport const successFetchMovieDetail = createAction('SUCCESS_FETCH_MOVIE_DETAIL');\nexport const errorFetchMovieDetail = createAction('ERROR_FETCH_MOVIE_DETAIL');\n\nexport const fetchMovieDetail = (movieId) => async (dispatch) => {\n try {\n  // dispatch(startFetchMovieDetail());\n  dispatch(startFetchMovieDetailSlice());\n\n  const overviewDetailsResponse = await fetch(`${BASE_URL}/get-overview-details?tconst=${movieId}`, { headers });\n  const overviewDetailsData = await overviewDetailsResponse.json();\n\n  const topCastResponse = await fetch(`${BASE_URL}/get-top-cast?tconst=${movieId}`, { headers });\n  const topCastData = await topCastResponse.json();\n\n  const detailsResponse = await fetch(`${BASE_URL}/get-details?tconst=${movieId}`, { headers });\n  const detailsData = await detailsResponse.json();\n\n  const fullCreditsResponse = await fetch(`${BASE_URL}/get-full-credits?tconst=${movieId}`, { headers });\n  const fullCreditsData = await fullCreditsResponse.json();\n\n  dispatch(successFetchMovieDetailSlice({\n   overview: overviewDetailsData,\n   topCast: topCastData,\n   details: detailsData,\n   fullCredits: fullCreditsData,\n  }));\n  /* dispatch(successFetchMovieDetail({\n   overview: overviewDetailsData,\n   topCast: topCastData,\n   details: detailsData,\n   fullCredits: fullCreditsData,\n  })); \n } catch (error) {\n  // dispatch(errorFetchMovieDetail({ error }));\n  dispatch(errorFetchMovieDetailSlice({ error }));\n }\n};\n\n*/","map":{"version":3,"names":["createAction","startFetchMovieRatings","successFetchMovieRatings","errorFetchMovieRatings","fetchMovieRatings","dispatch","console","log","error"],"sources":["/Users/heralvarado/Documents/Personal/Openmind/opencardsweb/visualvoicescard/src/redux/actions/movies.js"],"sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\n\n\nexport const startFetchMovieRatings = createAction('START_FETCH_MOVIE_RATINGS');\nexport const successFetchMovieRatings = createAction('SUCCESS_FETCH_MOVIE_RATINGS');\nexport const errorFetchMovieRatings = createAction('ERROR_FETCH_MOVIE_RATINGS');\n\n\nexport const fetchMovieRatings = () => async (dispatch) => {\n    try {\n        console.log(10);\n    } catch (error) {\n        // dispatch(errorFetchMovieRatings({ error }));\n        //dispatch(errorFetchMovieRatingsSlice({ error }));\n       }\n};\n\n/*\n// Importar actions de slices, solo para cuestiones demostrativas\nimport {\n startFetchMovieRatings as startFetchMovieRatingsSlice,\n successFetchMovieRatings as successFetchMovieRatingsSlice,\n errorFetchMovieRatings as errorFetchMovieRatingsSlice,\n startFetchMovieDetail as startFetchMovieDetailSlice,\n successFetchMovieDetail as successFetchMovieDetailSlice,\n errorFetchMovieDetail as errorFetchMovieDetailSlice,\n} from \"../slices/movies\";\n\n\nexport const fetchMovieRatings = (movieId) => async (dispatch) => {\n try {\n  // dispatch(startFetchMovieRatings());\n  dispatch(startFetchMovieRatingsSlice());\n\n  const response = await fetch(`${BASE_URL}/get-ratings?tconst=${movieId}`, { headers });\n  const data = await response.json();\n  \n  dispatch(successFetchMovieRatingsSlice({ data }));\n  // dispatch(successFetchMovieRatings({ data }));\n } catch (error) {\n  // dispatch(errorFetchMovieRatings({ error }));\n  dispatch(errorFetchMovieRatingsSlice({ error }));\n }\n};\n\nexport const startFetchMovieDetail = createAction('START_FETCH_MOVIE_DETAIL');\nexport const successFetchMovieDetail = createAction('SUCCESS_FETCH_MOVIE_DETAIL');\nexport const errorFetchMovieDetail = createAction('ERROR_FETCH_MOVIE_DETAIL');\n\nexport const fetchMovieDetail = (movieId) => async (dispatch) => {\n try {\n  // dispatch(startFetchMovieDetail());\n  dispatch(startFetchMovieDetailSlice());\n\n  const overviewDetailsResponse = await fetch(`${BASE_URL}/get-overview-details?tconst=${movieId}`, { headers });\n  const overviewDetailsData = await overviewDetailsResponse.json();\n\n  const topCastResponse = await fetch(`${BASE_URL}/get-top-cast?tconst=${movieId}`, { headers });\n  const topCastData = await topCastResponse.json();\n\n  const detailsResponse = await fetch(`${BASE_URL}/get-details?tconst=${movieId}`, { headers });\n  const detailsData = await detailsResponse.json();\n\n  const fullCreditsResponse = await fetch(`${BASE_URL}/get-full-credits?tconst=${movieId}`, { headers });\n  const fullCreditsData = await fullCreditsResponse.json();\n\n  dispatch(successFetchMovieDetailSlice({\n   overview: overviewDetailsData,\n   topCast: topCastData,\n   details: detailsData,\n   fullCredits: fullCreditsData,\n  }));\n  /* dispatch(successFetchMovieDetail({\n   overview: overviewDetailsData,\n   topCast: topCastData,\n   details: detailsData,\n   fullCredits: fullCreditsData,\n  })); \n } catch (error) {\n  // dispatch(errorFetchMovieDetail({ error }));\n  dispatch(errorFetchMovieDetailSlice({ error }));\n }\n};\n\n*/"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AAIA,OAAO,MAAMC,sBAAsB,GAAGD,YAAY,CAAC,2BAAD,CAA3C;AACP,OAAO,MAAME,wBAAwB,GAAGF,YAAY,CAAC,6BAAD,CAA7C;AACP,OAAO,MAAMG,sBAAsB,GAAGH,YAAY,CAAC,2BAAD,CAA3C;AAGP,OAAO,MAAMI,iBAAiB,GAAG,MAAM,MAAOC,QAAP,IAAoB;EACvD,IAAI;IACAC,OAAO,CAACC,GAAR,CAAY,EAAZ;EACH,CAFD,CAEE,OAAOC,KAAP,EAAc,CACZ;IACA;EACA;AACP,CAPM;AASP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}