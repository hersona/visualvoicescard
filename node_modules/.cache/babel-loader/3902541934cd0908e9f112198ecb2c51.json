{"ast":null,"code":"import { client } from \"./client\";\nexport const getHerson = async () => {\n  try {\n    const entries = await client.getEntries({\n      content_type: \"productoOpemindTools\"\n    });\n    const filteredEntries = entries.items.map(data => {\n      const filteredEntry = data.fields;\n      return filteredEntry;\n    });\n    return filteredEntries;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const {\n  usegetHerson\n} = getHerson;","map":{"version":3,"names":["client","getHerson","entries","getEntries","content_type","filteredEntries","items","map","data","filteredEntry","fields","error","console","log","usegetHerson"],"sources":["/Users/heralvarado/Documents/Personal/Openmind/opencardsweb/visualvoicescard/src/contentful/apiContentFul.js"],"sourcesContent":["import { client } from \"./client\";\n\nexport const getHerson = async () => {\n\n    try{\n        const entries  = await client.getEntries({\n            content_type: \"productoOpemindTools\",\n        });\n\n        const filteredEntries = entries.items.map((data) => {\n            const filteredEntry = data.fields;\n            return filteredEntry;\n        })\n\n        return filteredEntries;\n    } catch(error){\n        console.log(error);\n    }\n};\n\nexport const { usegetHerson } = getHerson;"],"mappings":"AAAA,SAASA,MAAT,QAAuB,UAAvB;AAEA,OAAO,MAAMC,SAAS,GAAG,YAAY;EAEjC,IAAG;IACC,MAAMC,OAAO,GAAI,MAAMF,MAAM,CAACG,UAAP,CAAkB;MACrCC,YAAY,EAAE;IADuB,CAAlB,CAAvB;IAIA,MAAMC,eAAe,GAAGH,OAAO,CAACI,KAAR,CAAcC,GAAd,CAAmBC,IAAD,IAAU;MAChD,MAAMC,aAAa,GAAGD,IAAI,CAACE,MAA3B;MACA,OAAOD,aAAP;IACH,CAHuB,CAAxB;IAKA,OAAOJ,eAAP;EACH,CAXD,CAWE,OAAMM,KAAN,EAAY;IACVC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAhBM;AAkBP,OAAO,MAAM;EAAEG;AAAF,IAAmBb,SAAzB"},"metadata":{},"sourceType":"module"}